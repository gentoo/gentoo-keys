#!/usr/bin/env python
# -*- coding: utf-8 -*-

'''Gentoo-keys is a gpg key manager for managing
 gentoo's gpg-signing keys.  It is these keys that are
 used to verify and validate release media, etc..

 This gkeys-gpg command is a wrapper to gnupg's gpg command
 which uses the gentoo-keys keyring system to control the
 keydirs and keyrings visible to gpg

 Distributed under the terms of the GNU General Public License v2

 Copyright:
             (c) 2011 Brian Dolbec
             Distributed under the terms of the GNU General Public License v2

 Author(s):
             Brian Dolbec <dolsen@gentoo.org>

'''

from __future__ import print_function

from gkeysgpg.cli import Main

import os
import sys


# This block ensures that ^C interrupts are handled quietly.
try:
    import signal

    def exithandler(signum,frame):
        signal.signal(signal.SIGINT, signal.SIG_IGN)
        signal.signal(signal.SIGTERM, signal.SIG_IGN)
        print()
        sys.exit(1)

    signal.signal(signal.SIGINT, exithandler)
    signal.signal(signal.SIGTERM, exithandler)
    signal.signal(signal.SIGPIPE, signal.SIG_DFL)

except KeyboardInterrupt:
    print()
    sys.exit(1)

root = None
if 'ROOT' in os.environ:
    root = os.environ['ROOT']

main = Main(root=root)
success = main()

# exit is boolean opposite normal True/False
sys.exit(not success)
